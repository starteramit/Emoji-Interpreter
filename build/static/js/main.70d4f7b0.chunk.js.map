{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","dicArray","Object","keys","App","useState","userInput","setUserInput","className","placeholder","onChange","event","target","value","map","emoji","onClick","emojiClickHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAIIA,EAAkB,CACpB,eAAM,8BACN,eAAM,cACN,eAAM,yBACN,eAAM,eACN,eAAM,OACN,eAAM,MACN,eAAM,gBACN,eAAM,gCACN,eAAM,yBACN,eAAM,gBACN,eAAM,2BACN,eAAM,eACN,eAAM,qBACN,eAAM,mBACN,eAAM,qBACN,eAAM,sBACN,eAAM,uBACN,eAAM,gBACN,eAAM,gBACN,eAAM,UACN,eAAM,QAGJC,EAAWC,OAAOC,KAAKH,GAuCZI,MArCf,WACE,IAAI,EAA4BC,mBAAS,+BAAzC,mBAAKC,EAAL,KAAgBC,EAAhB,KAeA,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,uBAAOC,YAAY,gBAAgBC,SAhBvC,SAA2BC,GACzBL,EAAYK,EAAMC,OAAOC,MAEvBN,EADED,KAAaN,EACFA,EAAgBM,GAEhB,gDAYb,qBAAKE,UAAU,WAAf,SAA2BF,IAC3B,qBAAKE,UAAU,WAAf,6BACCP,EAASa,KAAI,SAAUC,GACtB,OACE,sBAAMP,UAAU,aAAaQ,QAAS,kBAZ9C,SAA2BD,GACzBR,EAAaP,EAAgBe,IAWqBE,CAAkBF,IAA9D,SACGA,WCnDbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.70d4f7b0.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\n//Emoji Database!\nvar emojiDictionary = {\n  \"üòÄ\": \"Grinning Face with Big Eyes\",\n  \"üíå\": \"Love Letter\",\n  \"üò∑\": \"Face with medical mask\",\n  \"üéâ\": \"Party Popper\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üêï\": \"Dog\",\n  \"üòï\": \"Confused Face\",\n  \"ü§£\": \"Rolling on the Floor Laughing\",\n  \"üòÇ\": \"Face with Tears of Joy\",\n  \"üò¥\": \"Sleeping Face\",\n  \"ü•∞\": \"Smiling Face with Hearts\",\n  \"ü§ó\": \"Hugging Face\",\n  \"üòã\": \"Face Savoring Food\",\n  \"üòõ\": \"Face with Tongue\",\n  \"üôà\": \"See-No-Evil Monkey\",\n  \"üôâ\": \"Hear-No-Evil Monkey\",\n  \"üôä\": \"Speak-No-Evil Monkey\",\n  \"ü§´\": \"Shushing Face\",\n  \"ü§î\": \"Thinking Face\",\n  \"‚òÉÔ∏è\": \"Snowman\",\n  \"üî•\": \"Fire\",\n};\n\nvar dicArray = Object.keys(emojiDictionary);\n\nfunction App() {\n  var [userInput, setUserInput] = useState(\"Translation will come here!\");\n\n  function inputValueHandler(event) {\n    userInput = event.target.value;\n    if (userInput in emojiDictionary) {\n      setUserInput(emojiDictionary[userInput]);\n    } else {\n      setUserInput(\"We don't have this emoji in our database.\");\n    }\n  }\n\n  function emojiClickHandler(emoji) {\n    setUserInput(emojiDictionary[emoji]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emoji Interpreter</h1>\n      <input placeholder=\"Emoji here...\" onChange={inputValueHandler}></input>\n      <div className=\"divClass\">{userInput}</div>\n      <div className=\"divClass\">Emoji's We Know</div>\n      {dicArray.map(function (emoji) {\n        return (\n          <span className=\"emojiClass\" onClick={() => emojiClickHandler(emoji)}>\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * VISER -> View -> Interact -> State in Event HAndler -> render\n */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}